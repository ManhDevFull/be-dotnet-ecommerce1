// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using be_dotnet_ecommerce1.Data;

#nullable disable

namespace dotnet.Migrations
{
    [DbContext(typeof(ConnectData))]
    [Migration("20250928140540_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("be_dotnet_ecommerce1.Model.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("avatarimg")
                        .HasColumnType("text")
                        .HasColumnName("avatarimg");

                    b.Property<DateTime?>("bod")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("createdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("firstname")
                        .HasColumnType("text")
                        .HasColumnName("firstname");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("lastname")
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<string>("password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("refreshtoken")
                        .HasColumnType("text")
                        .HasColumnName("refreshtoken");

                    b.Property<DateTime?>("refreshtokenexpires")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("refreshtokenexpires");

                    b.Property<int>("role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<DateTime?>("updatedate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("account", (string)null);
                });

            modelBuilder.Entity("be_dotnet_ecommerce1.Model.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("idparent")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<string>("namecategory")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("namecategory");

                    b.HasKey("id");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("be_dotnet_ecommerce1.Model.CategoryAdmin", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int?>("idparent")
                        .HasColumnType("integer")
                        .HasColumnName("idparent");

                    b.Property<string>("namecategory")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("namecategory");

                    b.Property<int?>("product")
                        .HasColumnType("integer")
                        .HasColumnName("product");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("dotnet.Model.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<int>("category")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<DateTime>("createdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdate");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.PrimitiveCollection<List<string>>("imageurls")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("imageurls");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<string>("nameproduct")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nameproduct");

                    b.Property<DateTime>("updatedate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedate");

                    b.HasKey("id");

                    b.HasIndex("category");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("dotnet.Model.Variant", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("inputprice")
                        .HasColumnType("integer")
                        .HasColumnName("inputprice");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("productid")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("stock")
                        .HasColumnType("integer")
                        .HasColumnName("stock");

                    b.Property<DateTime>("updatedate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("valuevariant")
                        .IsRequired()
                        .HasColumnType("JSONB")
                        .HasColumnName("valuevariant");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("variant", null, t =>
                        {
                            t.Property("product_id")
                                .HasColumnName("product_id1");
                        });
                });

            modelBuilder.Entity("dotnet.Model.Product", b =>
                {
                    b.HasOne("be_dotnet_ecommerce1.Model.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("category")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("dotnet.Model.Variant", b =>
                {
                    b.HasOne("dotnet.Model.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("be_dotnet_ecommerce1.Model.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("dotnet.Model.Product", b =>
                {
                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
